float4x4 mvp; 

const float3 color = float3( 1.0f, 0.0f, 0.0f );

struct VertexInput 
{
    float4 position : POSITION;
};  

struct VertexOutput
{
    float4 position       : POSITION;
}; 

VertexOutput vs(VertexInput input)
{
    VertexOutput output;

    output.position       = mul( input.position, mvp );

    return output;
}

float4 ps(VertexOutput input) : COLOR
{
    float4 output;

    output = float4( color, 1.0f );

    return output;
}

technique red
{
    pass p0
    {
        VertexProgram = compile arbvp1 vs();
        FragmentProgram = compile arbfp1 ps();
        DepthTestEnable = true;
        CullFaceEnable = true;
    }
}
